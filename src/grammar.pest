alpha = @{ 'a'..'z' | 'A'..'Z' | "_" }
digit = @{ '0'..'9' }

exponent = @ { ("e" | "E") ~ "-"? ~ num }
float = @{ 
  "-"? ~ digit+ ~ "." ~ digit+ ~ exponent?
}


num = @{ digit+ }
neg = @{ "-" ~ num }

ident = @{ !"Op" ~ alpha ~ (alpha | digit)* }
opcode = @ { "Op" ~ ident }
ident_list = _{ ident ~ ("," ~ ident)* }

line = @{ (!NEWLINE ~ ANY)+ ~ NEWLINE }
comment = @{ ";" ~ line }
hex = _{ '0'..'9' | 'a'..'f' | 'A'..'F' }
unicode_hex = { hex{1, 6} }
raw_string = { (!("\\" | "\"") ~ ANY)+ }
string = @{ "\"" ~ (raw_string | escape)* ~ "\"" }
predefined = { "n" | "r" | "t" | "\\" | "0" | "\"" | "'" }
byte       = { "x" ~ hex{2} }
unicode    = { "u" ~ "{" ~ unicode_hex ~ "}" }
escape     = { "\\" ~ (predefined | byte | unicode) }

id = @{
  ("%" ~ ident) | ("%" ~ num)
}

dim = {
  "2D"
  | "1D"
  | "3D"
}

operand = _{
  id
  | dim
  | string
  | float
  | num
  | neg
  | ident
}

instruction_header = _{
  opcode | (id ~ "=" ~ opcode)
}

instruction = {
  instruction_header ~ (!(id ~ "=") ~ operand)*
}

grammar = _{
  comment{5} ~
  instruction+
  ~ EOI
}

space = { " " | "\t" }
WHITESPACE = _{ space | NEWLINE }